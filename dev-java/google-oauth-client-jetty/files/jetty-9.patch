diff --git a/src/main/java/com/google/api/client/extensions/jetty/auth/oauth2/LocalServerReceiver.java b/src/main/java/com/google/api/client/extensions/jetty/auth/oauth2/LocalServerReceiver.java
index 81e3900..2d9a624 100644
--- a/src/main/java/com/google/api/client/extensions/jetty/auth/oauth2/LocalServerReceiver.java
+++ b/src/main/java/com/google/api/client/extensions/jetty/auth/oauth2/LocalServerReceiver.java
@@ -17,10 +17,10 @@ package com.google.api.client.extensions.jetty.auth.oauth2;
 import com.google.api.client.extensions.java6.auth.oauth2.VerificationCodeReceiver;
 import com.google.api.client.util.Throwables;
 
-import org.mortbay.jetty.Connector;
-import org.mortbay.jetty.Request;
-import org.mortbay.jetty.Server;
-import org.mortbay.jetty.handler.AbstractHandler;
+import org.eclipse.jetty.server.Connector;
+import org.eclipse.jetty.server.Request;
+import org.eclipse.jetty.server.Server;
+import org.eclipse.jetty.server.handler.AbstractHandler;
 
 import java.io.IOException;
 import java.io.PrintWriter;
@@ -31,6 +31,7 @@ import java.util.concurrent.locks.ReentrantLock;
 
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
+import org.eclipse.jetty.server.ServerConnector;
 
 /**
  * OAuth 2.0 verification code receiver that runs a Jetty server on a free port, waiting for a
@@ -95,11 +96,12 @@ public final class LocalServerReceiver implements VerificationCodeReceiver {
     if (port == -1) {
       port = getUnusedPort();
     }
-    server = new Server(port);
-    for (Connector c : server.getConnectors()) {
-      c.setHost(host);
-    }
-    server.addHandler(new CallbackHandler());
+    server = new Server();
+    ServerConnector connector = new ServerConnector(server);
+    connector.setHost(host);
+    connector.setPort(port);
+    server.setConnectors(new Connector[] { connector });
+    server.setHandler(new CallbackHandler());
     try {
       server.start();
     } catch (Exception e) {
@@ -211,7 +213,7 @@ public final class LocalServerReceiver implements VerificationCodeReceiver {
 
     @Override
     public void handle(
-        String target, HttpServletRequest request, HttpServletResponse response, int dispatch)
+        String target, Request r,HttpServletRequest request, HttpServletResponse response)
         throws IOException {
       if (!CALLBACK_PATH.equals(target)) {
         return;
